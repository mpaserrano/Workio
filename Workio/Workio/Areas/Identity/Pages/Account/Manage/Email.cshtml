@page
@model EmailModel
@{
    ViewData["Title"] = @localizer.Get("ManageEmail");
    ViewData["ActivePage"] = ManageNavPages.Email;
}

<h3>@ViewData["Title"]</h3>
<partial name="_StatusMessage" for="StatusMessage" />
<div class="row">
    <div class="col-md-6">
        <form id="email-form" method="post" class="needs-validation" novalidate>
            <!--<div asp-validation-summary="All" class="text-danger"></div>-->
            @if (Model.IsEmailConfirmed)
            {
                <div class="form-floating input-group mb-4">
                    <input asp-for="Email" class="form-control" disabled />
                        <div class="input-group-append">
                            <span class="h-100 input-group-text text-success font-weight-bold">✓</span>
                        </div>
                    <label asp-for="Email" class="form-label">@localizer.Get("Email")</label>
                </div>
            }
            else
            {
                <div class="form-floating mb-4">
                    <input asp-for="Email" class="form-control" disabled />
                    <label asp-for="Email" class="form-label">@localizer.Get("Email")</label>
                    <button id="email-verification" type="submit" asp-page-handler="SendVerificationEmail" class="btn btn-link">@localizer.Get("SendVerificationEmail")</button>
                </div>
            }
            <div class="form-floating mb-4">
                <input asp-for="Input.NewEmail" class="form-control" autocomplete="email" aria-required="true" required/>
                <label asp-for="Input.NewEmail" class="form-label">@localizer.Get("NewEmail")</label>
                <span asp-validation-for="Input.NewEmail" class="invalid-feedback"></span>
            </div>
            <button id="change-email-button" type="submit" asp-page-handler="ChangeEmail" class="w-100 btn btn-lg btn-primary">@localizer.Get("ChangeEmail")</button>
        </form>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}

<script>
    (() => {
            'use strict';

            // Fetch all the forms we want to apply custom Bootstrap validation styles to
            const forms = document.querySelectorAll('.needs-validation');

            // Loop over them and prevent submission
            Array.prototype.slice.call(forms).forEach((form) => {
                form.addEventListener('submit', (event) => {
                    if (!form.checkValidity()) {
                        event.preventDefault();
                        event.stopPropagation();
                    }
                    form.classList.add('was-validated');
                }, false);
            });
    })();
</script>
