@model Workio.Models.Milestone
@inject CommonLocalizationService localizer

<div class="modal fade" id="milestoneModal" tabindex="-1" data-mdb-backdrop="static" aria-labelledby="milestoneModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form asp-controller="Teams" asp-action="AddMilestone" asp-route-teamId="@ViewData["id"]" id="milestoneForm" class="needs-validation" novalidate>
                <div class="modal-header">
                    <h5 class="modal-title" id="milestoneModalLabel">@localizer.Get("Milestone")</h5>
                    <button type="reset" class="btn-close" id="closeModal" data-mdb-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="row g-3 align-items-center mb-4">
                        <div class="col-md-12">
                            <div class="form-outline">
                                <input asp-for="Name" type="text" class="form-control" required/>
                                <label asp-for="Name" class="form-label">@localizer.Get("MilestoneTitle")</label>
                                <span asp-validation-for="Name" class="invalid-feedback">@localizer.Get("RequiredField")</span>
                            </div>
                        </div>
                    </div>
                    <div class="row g-3 align-items-center mb-4">
                        <div class="col-md-12">
                            <div class="form-outline">
                                <input asp-for="Description" type="text" class="form-control" required />
                                <label asp-for="Description" rows="4" class="form-label">@localizer.Get("Description")</label>
                                <span asp-validation-for="Description" class="invalid-feedback">@localizer.Get("RequiredField")</span>
                            </div>
                        </div>
                    </div>
                    <div class="row g-3 align-items-center mb-4">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label asp-for="StartDate" class="control-label">@localizer.Get("StartDate")</label>
                                <input asp-for="StartDate" type="date" min="@DateTime.Now.AddDays(1).ToString("yyyy-MM-dd")" class="form-control" id="StartDate" required />
                                <span asp-validation-for="StartDate" class="invalid-feedback">@localizer.Get("RequiredField")</span>
                            </div>
                        </div>
                    </div>
                    <div class="row g-3 align-items-center mb-4">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label asp-for="EndDate" class="control-label">@localizer.Get("EndDate")</label>
                                <input asp-for="EndDate" name="EndDate" min="@DateTime.Now.ToString("yyyy-MM-dd")" class="form-control" id="EndDate" required/>
                                <span asp-validation-for="EndDate" class="invalid-feedback">@localizer.Get("RequiredField")</span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="reset" class="btn btn-secondary" id="closeModal2" data-mdb-dismiss="modal">@localizer.Get("Close")</button>
                    <button type="submit" class="btn btn-primary" id="submit-milestone">@localizer.Get("Add")</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

<script>
    (() => {
        'use strict';

        // Fetch all the forms we want to apply custom Bootstrap validation styles to
        const forms = document.querySelectorAll('.needs-validation');

        // Loop over them and prevent submission
        Array.prototype.slice.call(forms).forEach((form) => {
            form.addEventListener('submit', (event) => {
                if (!form.checkValidity()) {
                    event.preventDefault();
                    event.stopPropagation();
                }
                form.classList.add('was-validated');
            }, false);
        });
        
        document.getElementById('closeModal').addEventListener("click", resetModal)
        document.getElementById('closeModal2').addEventListener("click", resetModal)
        
        function resetModal(){
            let deleteButton = document.getElementById('deleteMilestone')
            let changeStatusMilestone = document.getElementById('changeStatusMilestone');
            
            if(deleteButton != null){
                deleteButton.remove()    
            }

            if (changeStatusMilestone != null){
                changeStatusMilestone.remove();
            }
        }
    })();
</script>